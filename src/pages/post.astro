---
import Base from "../layout/base.astro";
import { Header1, Header2, Header3, Link } from "../components/styles/typo";
import List from "../components/styles/List";
import Image from "../components/styles/Image";
import Code from "../components/Code";
import Alert from "../components/styles/Alert";
import CodeBlock from "../components/CodeBlock";
import {client} from "../../tina/__generated__/client";
import Stepper from "../components/Stepper";
const myPost = await client.queries.post({ relativePath: 'hello-world.mdx' })
const h2headers = myPost.data.post.body.children.filter((el) => el.type === 'h2').map((el) => el.children[0].text)
import { TinaMarkdown } from "tinacms/dist/rich-text";
const components = {
    h1: Header1,
    h2: Header2,
    h3: Header3,
    a: Link,
    ol: List,
    ul: List,
    Alert: Alert,
    img: Image,
    code_block: CodeBlock,
    code: Code,
};
---

<Base>
    <div class="xl:flex xl:flex-row xl:gap-12">
        <div class="xl:basis-1/4 xl:flex-none max-xl:sticky max-xl:top-0">
            <Stepper headers={h2headers} />
        </div>
        <div class="px-4 xl:flex-1 xl:min-w-0">
            <Header1 extraClasses="text-center">wedwedewdewdwehukwegdoewlcdhweuodfhweidhweoudbwednewildwenindiewndwl</Header1>
            <TinaMarkdown content={myPost.data.post.body} components={components} />
        </div>
    </div>
</Base>
<script src="/hljs/script.js" is:inline></script>
<script is:inline>
    document.addEventListener('DOMContentLoaded', (event) => {
        hljs.highlightAll();
    });
</script>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const tags = document.getElementsByClassName('step');
        const observer = new IntersectionObserver(entries => {
            entries.forEach(entry => {
                if (!entry.isIntersecting) return;
                const slug = entry.target.innerHTML;
                const index = Array.from(tags).findIndex((el) => el.innerHTML === slug);
                Array.from(tags).forEach((el, i) => i <= index ? el.classList.add('step-primary') : el.classList.remove('step-primary'));
            });
        });

        // Track headers
        document.querySelectorAll('h2,h3,h4,h5,h6').forEach((section) => {
            observer.observe(section);
        });
    });
</script>